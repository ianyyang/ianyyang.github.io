{"version":3,"sources":["components/galaxy.js","components/rocketship.js","components/home.js","components/project-card.js","components/project-card-popup.js","components/projects.js","App.js","serviceWorker.js","index.js"],"names":["Galaxy","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","Component","Rocketship","greetings","Home","greeting","setState","Math","floor","random","length","_this2","interval","setInterval","updateGreeting","scroller","scrollTo","duration","clearInterval","lib","col","modules","name","href","rel","target","src","alt","activeClass","to","smooth","delay","offset","components_rocketship","useStyles","makeStyles","theme","_root","root","minWidth","maxWidth","defineProperty","breakpoints","up","down","header","height","ProjectCard","_ref","image","classes","Card","variant","CardHeader","titleTypographyProps","title","CardMedia","component","textAlign","ProjectCardPopup","preview","desc","tech","github","link","_React$useState","React","useState","_React$useState2","slicedToArray","open","setOpen","parseDesc","map","line","Grid","container","spacing","direction","alignItems","justify","Link","underline","onClick","Dialog","onClose","aria-labelledby","aria-describedby","CardContent","Code_default","style","color","grey","CardActions","GitHub_default","Link_default","Projects","react_responsive_default","minDeviceWidth","maxDeviceWidth","item","xs","App","components_galaxy","components_projects","components_home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd3405ea.chunk.js","sourcesContent":["// Imports\nimport React, { Component } from 'react';\n\n// CSS\nimport './../styles/css/galaxy.css';\n\nclass Galaxy extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"galaxy\">\n                <div className=\"stars\">\n                    <div className=\"stars1\"></div>\n                    <div className=\"stars2\"></div>\n                    <div className=\"stars3\"></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Galaxy;\n","// Imports\nimport React, { Component } from 'react';\n\n// CSS\nimport './../styles/css/rocketship.css';\n\nclass Rocketship extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"rocketship\">\n                <div className=\"exhaust-fumes\">\n                    <ul>\n                        <li />\n                        <li />\n                        <li />\n                        <li />\n                        <li />\n                        <li />\n                        <li />\n                        <li />\n                        <li />\n                    </ul>\n                </div>\n\n                <div className=\"rocket\">\n                    <div className=\"rocket-body\">\n                        <div className=\"body\"></div>\n                        <div className=\"body-cap\"></div>\n                        <div className=\"fin-sides fin-left\"></div>\n                        <div className=\"fin-sides fin-right\"></div>\n                        <div className=\"fin-middle\"></div>\n                        <div className=\"window\"></div>\n                        <div className=\"window-tint\"></div>\n                    </div>\n                    <div className=\"exhaust-flame\"></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Rocketship;\n","// Imports\nimport React, { Component } from 'react';\nimport { Link, Element, scroller } from 'react-scroll';\nimport { Grid, Cell } from 'react-mdl';\n\n// Components\nimport Rocketship from './rocketship';\n\n// CSS\nimport './../styles/css/home.css';\n\nconst greetings = ['Hello', 'Hallo', 'Jambo', 'Barev dzez', 'Mingalarba',\n    'Chum reap suor', 'Ni hao', 'Namasté', 'Halo', 'Konnichiwa', 'Annyeonghaseyo',\n    'Sabaidee', 'Sain baina uu', 'Kumusta', 'Vanakkam', 'Sàwàtdee', 'Xin chào',\n    'Tungjatjeta', 'Zdravejte', 'Bok', 'Ahoj', 'Terve', 'Bonjour', 'Dia duit',\n    'Guten tag', 'Yasass', 'Szervusz', 'Halló', 'Salve', 'God dag', 'Cześć', 'Olá',\n    'Salut', 'Privét', 'Zdravo', 'Hola', 'Hej', 'Vitayu', 'As-salām ‘alaykum',\n    'Shalóm', 'Salâm', 'Merhaba', 'Aloha', 'Asalaam alaikum', 'Hei', 'Geia', 'Hai'];\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            greeting: 'Hello',\n        };\n    }\n\n    updateGreeting() {\n        this.setState({\n            greeting: greetings[Math.floor(Math.random() * greetings.length)],\n        });\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.updateGreeting(), 1500);\n        scroller.scrollTo('home-heading', { duration: 0 });\n    }\n\n    componentWillUpdate() {\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        return (\n            <div className=\"home\">\n                <Grid>\n                    <Cell col={12}>\n                        <div className=\"home-grid\">\n                            <Element name=\"home-heading\">\n                                <div className=\"banner-text\">\n                                    <h1><span>I&apos;m Ian Yang!</span></h1>\n                                    <p>\n                                        Computer Science & Statistics Student\n                                        <br />\n                                    University of Toronto\n                                    </p>\n                                    {/* <hr /> */}\n                                </div>\n                            </Element>\n\n                            <div className=\"social-links\">\n                                {/* Resume */}\n                                <div className=\"social-icon\">\n                                    <a href='../resources/Resume (Ian Yang).pdf' rel=\"noopener noreferrer\" target=\"_blank\">\n                                        <img src='../images/resume.svg' alt=\"Resume\" className=\"social-icon\" />\n                                    </a>\n                                    <p className=\"social-icon-caption\">Resume</p>\n                                </div>\n\n                                {/* Projects */}\n                                <div className=\"social-icon\">\n                                    {/* eslint-disable-next-line */}\n                                    <Link\n                                        activeClass=\"active\"\n                                        to=\"projects-grid\"\n                                        smooth={true}\n                                        delay={200}\n                                        offset={-1000}\n                                        duration={500}\n                                    >\n                                        <img src='../images/projects.svg' alt=\"Projects\" className=\"social-icon\" />\n                                    </Link>\n                                    <p className=\"social-icon-caption\">Projects</p>\n                                </div>\n\n                                {/* GitHub */}\n                                <div className=\"social-icon\">\n                                    <a href='https://github.com/ianyyang/' rel=\"noopener noreferrer\" target=\"_blank\">\n                                        <img src='../images/github.svg' alt=\"GitHub\" className=\"social-icon\" />\n                                    </a>\n                                    <p className=\"social-icon-caption\">GitHub</p>\n                                </div>\n\n                                {/* LinkedIn */}\n                                <div className=\"social-icon\">\n                                    <a href='https://www.linkedin.com/in/ianyyang/' rel=\"noopener noreferrer\" target=\"_blank\">\n                                        <img src='../images/linkedin.svg' alt=\"LinkedIn\" className=\"social-icon\" />\n                                    </a>\n                                    <p className=\"social-icon-caption\">LinkedIn</p>\n                                </div>\n\n                                {/* Email */}\n                                <div className=\"social-icon\">\n                                    <a href='mailto:iany.yang.utoronto.ca' rel=\"noopener noreferrer\" target=\"_blank\">\n                                        <img src='../images/email.svg' alt=\"Email\" className=\"social-icon\" />\n                                    </a>\n                                    <p className=\"social-icon-caption\">Email</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <Rocketship />\n                    </Cell>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","// Import\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Material UI\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 225,\n        maxWidth: 225,\n        [theme.breakpoints.up('lg')]: {\n            minWidth: 275,\n            maxWidth: 275,\n        },\n        [theme.breakpoints.down('xs')]: {\n            minWidth: 175,\n            maxWidth: 200,\n        },\n    },\n    header: {\n        height: 5,\n    },\n}));\n\nexport default function ProjectCard({ name, image }) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardHeader className={classes.header} titleTypographyProps={{ variant: 'h7' }} title={name} />\n            <CardMedia component=\"img\" src={image} />\n        </Card>\n    );\n}\n","// Imports\nimport React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Dialog from '@material-ui/core/Dialog';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport CodeIcon from '@material-ui/icons/Code';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport Grid from '@material-ui/core/Grid';\n\n// Components\nimport ProjectCard from './project-card';\n\n// CSS\nimport './../styles/css/project-card-popup.css';\n\n// Material UI\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 300,\n        maxWidth: 400,\n    },\n    header: {\n        height: 10,\n        textAlign: 'center',\n    },\n}));\n\nexport default function ProjectCardPopup({ name, preview, image, desc, tech, github, link }) {\n    const classes = useStyles();\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const parseDesc = desc.map((line) =>\n        <div>{line}<br /><br /></div>\n    );\n\n    const ifGithubLink = () => {\n        if (github && link) {\n            return (\n                <CardActions>\n                    <hr />\n                    <a href={github} rel=\"noopener noreferrer\" target=\"_blank\">\n                        <GitHubIcon style={{ color: grey[900] }} />\n                    </a>\n                    <a href={link} rel=\"noopener noreferrer\" target=\"_blank\">\n                        <LinkIcon style={{ color: grey[900] }} />\n                    </a>\n                </CardActions>\n            );\n        } else if (github) {\n            return (\n                <CardActions>\n                    <hr />\n                    <a href={github} rel=\"noopener noreferrer\" target=\"_blank\">\n                        <GitHubIcon style={{ color: grey[900] }} />\n                    </a>\n                </CardActions>\n            );\n        } else if (link) {\n            return (\n                <CardActions>\n                    <hr />\n                    <a href={link} className=\"link-icon\" rel=\"noopener noreferrer\" target=\"_blank\">\n                        <LinkIcon style={{ color: grey[900] }} />\n                    </a>\n                </CardActions>\n            );\n        } else {\n            return (null);\n        }\n    };\n\n    return (\n        <div>\n            <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n            >\n                <Link underline=\"no\" onClick={handleClickOpen}>\n                    <ProjectCard name={name} image={preview} />\n                </Link>\n                <Dialog\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\">\n                    <Card className={classes.root} variant=\"outlined\">\n                        <CardHeader className={classes.header} title={name} />\n                        <CardMedia component=\"img\" src={image} />\n                        <CardContent>\n                            <div className=\"tech-stack\">\n                                <CodeIcon style={{ color: grey[900] }} /> {tech}\n                            </div>\n                            <div>\n                                {parseDesc}\n                            </div>\n                        </CardContent>\n                        <div className=\"links\">\n                            {ifGithubLink()}\n                        </div>\n                    </Card>\n                </Dialog>\n            </Grid>\n        </div>\n    );\n}\n","// Imports\nimport React, { Component } from 'react';\nimport { Element } from 'react-scroll';\nimport MediaQuery from 'react-responsive';\n\n// Material UI\nimport Grid from '@material-ui/core/Grid';\n\n// Components\nimport ProjectCardPopup from './project-card-popup';\n\n// CSS\nimport './../styles/css/projects.css';\n\nclass Projects extends Component {\n    render() {\n        return (\n            <div className=\"projects-grid\">\n                <Element name=\"projects-grid\">\n                    <MediaQuery minDeviceWidth={768}>\n                        <div className=\"grid-container\">\n                            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                                <div className=\"project-card\">\n                                    <ProjectCardPopup\n                                        name=\"Personal Website\"\n                                        preview=\"../images/personal-website-preview.png\"\n                                        image=\"../images/personal-website-full.png\"\n                                        desc={[\"My personal website (this one!) serves as an environment for me to showcase the projects I've made to the world and to document my progress throughout them!\"]}\n                                        tech=\"React.js, HTML, CSS, Material UI\"\n                                        github=\"https://github.com/ianyyang/personal-website-build-2.0\"\n                                        link=\"\"\n                                    />\n                                </div>\n\n                                <div className=\"project-card\">\n                                    <ProjectCardPopup\n                                        name=\"Foodiary UI/UX Project\"\n                                        preview=\"../images/foodiary-preview.png\"\n                                        image=\"../images/foodiary-full.png\"\n                                        desc={[\"The Foodiary UI/UX Project is a culmination of work done by my amazing group for CSC318: The Design of Interactive Computational Media at the University of Toronto. I opted to individually re-create the high-fidelity model of our project from the ground up to further develop my UI/UX skills.\", \"Foodiary is an app focused on promoting food safety within food handling, storing, and preparation via food expiry notifications, applicable recipe suggestions, and relevant news articles.\"]}\n                                        tech=\"Figma Wireframing and UI Design Tool\"\n                                        github=\"\"\n                                        link=\"https://ianyyang.github.io/Foodiary\"\n                                    />\n                                </div>\n\n                                <div className=\"project-card\">\n                                    <ProjectCardPopup\n                                        name=\"SpotifyKaraoke\"\n                                        preview=\"../images/spotifykaraoke-preview.png\"\n                                        image=\"../images/spotifykaraoke-full.png\"\n                                        desc={[\"In the good old days of Spotify, lyrics would show up in real-time while listening to a song. Inexplicably, they removed this feature. Now we're here to bring it back.\", \"SpotifyKaraoke is a web application powered by React.js that is meant to be run alongside your daily Spotify jam sessions. With its built-in web player, it gives you the option of kickstarting the music off your way. Music already playing? That works too! SpotifyKaraoke will automatically follow along with whatever enticing melodies you already have blasting in your room.\", \"Once set up, SpotifyKaraoke will generate lyrics to whatever song you are playing in real-time, allowing you to transform a jam session to a mini karaoke session in your own home!\"]}\n                                        tech=\"React.js, HTML, CSS, Spotify API, Genius API\"\n                                        github=\"https://github.com/ianyyang/SpotifyKaraoke\"\n                                        link=\"\"\n                                    />\n                                </div>\n                            </Grid >\n                        </div>\n                    </MediaQuery>\n\n                    <MediaQuery maxDeviceWidth={767}>\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={2}>\n                            <Grid item xs={12}>\n                                <ProjectCardPopup\n                                    name=\"Personal Website\"\n                                    preview=\"../images/personal-website-preview.png\"\n                                    image=\"../images/personal-website-full.png\"\n                                    desc={[\"My personal website (this one!) serves as an environment for me to showcase the projects I've made to the world and to document my progress throughout them!\"]}\n                                    tech=\"React.js, HTML, CSS, Material UI\"\n                                    github=\"https://github.com/ianyyang/personal-website-build-2.0\"\n                                    link=\"\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <ProjectCardPopup\n                                    name=\"Foodiary UI/UX Project\"\n                                    preview=\"../images/foodiary-preview.png\"\n                                    image=\"../images/foodiary-full.png\"\n                                    desc={[\"The Foodiary UI/UX Project is a culmination of work done by my amazing group for CSC318: The Design of Interactive Computational Media at the University of Toronto. I opted to individually re-create the high-fidelity model of our project from the ground up to further develop my UI/UX skills.\", \"Foodiary is an app focused on promoting food safety within food handling, storing, and preparation via food expiry notifications, applicable recipe suggestions, and relevant news articles.\"]}\n                                    tech=\"Figma Wireframing and UI Design Tool\"\n                                    github=\"\"\n                                    link=\"https://ianyyang.github.io/Foodiary\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <ProjectCardPopup\n                                    name=\"SpotifyKaraoke\"\n                                    preview=\"../images/spotifykaraoke-preview.png\"\n                                    image=\"../images/spotifykaraoke-full.png\"\n                                    desc={[\"In the good old days of Spotify, lyrics would show up in real-time while listening to a song. Inexplicably, they removed this feature. Now we're here to bring it back.\", \"SpotifyKaraoke is a web application powered by React.js that is meant to be run alongside your daily Spotify jam sessions. With its built-in web player, it gives you the option of kickstarting the music off your way. Music already playing? That works too! SpotifyKaraoke will automatically follow along with whatever enticing melodies you already have blasting in your room.\", \"Once set up, SpotifyKaraoke will generate lyrics to whatever song you are playing in real-time, allowing you to transform a jam session to a mini karaoke session in your own home!\"]}\n                                    tech=\"React.js, HTML, CSS, Spotify API, Genius API\"\n                                    github=\"https://github.com/ianyyang/SpotifyKaraoke\"\n                                    link=\"\"\n                                />\n                            </Grid>\n                        </Grid >\n                    </MediaQuery>\n                </Element>\n            </div>\n        );\n    }\n}\n\nexport default Projects;\n","// Imports\nimport React, { Component } from 'react';\n\n// CSS\nimport './styles/css/App.css';\n\n// Components\nimport Galaxy from './components/galaxy';\nimport Home from './components/home';\nimport Projects from './components/projects';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Galaxy />\n                <Projects />\n                <Home />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.',\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}