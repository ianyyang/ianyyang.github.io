{"version":3,"sources":["components/galaxy.js","components/rocketship.js","components/home.js","components/projects-desktop.js","App.js","components/projects-mobile.js","serviceWorker.js","index.js"],"names":["Galaxy","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","Component","Rocketship","greetings","Home","greeting","setState","Math","floor","random","length","_this2","interval","setInterval","updateGreeting","configureAnchors","offset","scrollDuration","goToAnchor","removeHash","clearInterval","_this3","react_mdl_lib","col","lib_default","id","href","rel","target","src","alt","onClick","scrollToProjects","components_rocketship","ProjectsDesktop","shadow","style","width","margin","background","color","height","App","components_galaxy","projects_desktop","components_home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qTA0BeA,iCAnBX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,GAFEP,wEAOf,OACIQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAbdC,sCCyCNC,qBAxCX,SAAAA,EAAYd,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAU,IACfb,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAY,GAAAP,KAAAH,KAAMJ,KACDQ,MAAQ,GAFEP,wEAOf,OACIQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,aAIRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAlCVC,cCKnBE,SAAY,CAAC,QAAS,QAAS,QAAS,aAAc,aACxD,iBAAkB,SAAU,aAAW,OAAQ,aAAc,iBAC7D,WAAY,gBAAiB,UAAW,WAAY,iBAAY,cAChE,cAAe,YAAa,MAAO,OAAQ,QAAS,UAAW,WAC/D,YAAa,SAAU,WAAY,WAAS,QAAS,UAAW,kBAAS,SACzE,QAAS,YAAU,SAAU,OAAQ,MAAO,SAAU,8BACtD,YAAU,WAAS,UAAW,QAAS,kBAAmB,MAAO,OAAQ,QA0F9DC,cAvFX,SAAAA,EAAYhB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAY,IACff,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAc,GAAAT,KAAAH,KAAMJ,KACDQ,MAAQ,CACTS,SAAU,SAHChB,gFAQfG,KAAKc,SAAS,CACVD,SAAUF,EAAUI,KAAKC,MAAMD,KAAKE,SAAWN,EAAUO,uDAI7C,IAAAC,EAAAnB,KAChBA,KAAKoB,SAAWC,YAAY,kBAAMF,EAAKG,kBAAkB,MACzDC,2BAAiB,CAAEC,OAAQ,EAAGC,eAAgB,IAC9CC,qBAAW,QAAQ,iDAInBC,sEAIAC,cAAc5B,KAAKoB,qDAInBG,2BAAiB,CAAEC,QAAS,GAAIC,eAAgB,MAChDC,qBAAW,YAAY,oCAGlB,IAAAG,EAAA7B,KACL,OACIK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACuB,EAAA,KAAD,KACIzB,EAAAC,EAAAC,cAACuB,EAAA,KAAD,CAAMC,IAAK,IACP1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAkB2B,GAAI,QAClB5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,8BACJF,EAAAC,EAAAC,cAAA,iDAEAF,EAAAC,EAAAC,cAAA,WAFA,2BASRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEXH,EAAAC,EAAAC,cAAA,KAAG2B,KAAK,qCAAqCC,IAAI,sBAAsBC,OAAO,UAC1E/B,EAAAC,EAAAC,cAAA,OAAK8B,IAAI,uBAAuBC,IAAI,SAAS9B,UAAU,iBAK3DH,EAAAC,EAAAC,cAAA,KAAGgC,QAAS,kBAAMV,EAAKW,qBACnBnC,EAAAC,EAAAC,cAAA,OAAK8B,IAAI,yBAAyBC,IAAI,WAAW9B,UAAU,iBAI/DH,EAAAC,EAAAC,cAAA,KAAG2B,KAAK,+BAA+BC,IAAI,sBAAsBC,OAAO,UACpE/B,EAAAC,EAAAC,cAAA,OAAK8B,IAAI,uBAAuBC,IAAI,SAAS9B,UAAU,iBAI3DH,EAAAC,EAAAC,cAAA,KAAG2B,KAAK,wCAAwCC,IAAI,sBAAsBC,OAAO,UAC7E/B,EAAAC,EAAAC,cAAA,OAAK8B,IAAI,yBAAyBC,IAAI,WAAW9B,UAAU,iBAI/DH,EAAAC,EAAAC,cAAA,KAAG2B,KAAK,+BAA+BC,IAAI,sBAAsBC,OAAO,UACpE/B,EAAAC,EAAAC,cAAA,OAAK8B,IAAI,sBAAsBC,IAAI,QAAQ9B,UAAU,mBAKjEH,EAAAC,EAAAC,cAACkC,EAAD,gBAhFLhC,aC0HJiC,0LAnIP,OACIrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACuB,EAAA,KAAD,CAAMtB,UAAU,iBACZH,EAAAC,EAAAC,cAACuB,EAAA,KAAD,CAAMC,IAAK,IACP1B,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAkB2B,GAAI,YAClB5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,wBAIRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAEXH,EAAAC,EAAAC,cAACuB,EAAA,KAAD,KAEIzB,EAAAC,EAAAC,cAACuB,EAAA,KAAD,CAAMC,IAAK,GACP1B,EAAAC,EAAAC,cAACuB,EAAA,KAAD,CAAMa,OAAQ,EAAGC,MAAO,CAAEC,MAAO,QAASC,OAAQ,SAC9CzC,EAAAC,EAAAC,cAACuB,EAAA,YAAD,CAAac,MAAO,CAAEG,WAAY,YAC9B1C,EAAAC,EAAAC,cAAA,KAAG2B,KAAK,kDAAkDC,IAAI,sBAAsBC,OAAO,UACvF/B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,sBAGRH,EAAAC,EAAAC,cAAA,KAAG2B,KAAK,kDAAkDC,IAAI,sBAAsBC,OAAO,UACvF/B,EAAAC,EAAAC,cAACuB,EAAA,UAAD,CAAWc,MAAO,CAAEI,MAAO,UAAWC,OAAQ,QAASF,WAAY,yDAEvE1C,EAAAC,EAAAC,cAACuB,EAAA,SAAD,CAAUc,MAAO,CAAEG,WAAY,YAC3B1C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,iKAEJH,EAAAC,EAAAC,cAACuB,EAAA,YAAD,CAAac,MAAO,CAAEG,WAAY,YAC9B1C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,wBAIZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAGdH,EAAAC,EAAAC,cAACuB,EAAA,KAAD,CAAMC,IAAK,GACP1B,EAAAC,EAAAC,cAACuB,EAAA,KAAD,CAAMa,OAAQ,EAAGC,MAAO,CAAEC,MAAO,QAASC,OAAQ,SAC9CzC,EAAAC,EAAAC,cAACuB,EAAA,YAAD,CAAac,MAAO,CAAEG,WAAY,YAC9B1C,EAAAC,EAAAC,cAAA,KAAG2B,KAAK,uCAAuCC,IAAI,sBAAsBC,OAAO,UAC5E/B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,4BAGRH,EAAAC,EAAAC,cAAA,KAAG2B,KAAK,uCAAuCC,IAAI,sBAAsBC,OAAO,UAC5E/B,EAAAC,EAAAC,cAACuB,EAAA,UAAD,CAAWc,MAAO,CAAEI,MAAO,UAAWC,OAAQ,QAASF,WAAY,iDAEvE1C,EAAAC,EAAAC,cAACuB,EAAA,SAAD,CAAUc,MAAO,CAAEG,WAAY,YAC3B1C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,iMAEJH,EAAAC,EAAAC,cAACuB,EAAA,YAAD,CAAac,MAAO,CAAEG,WAAY,YAC9B1C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,yCAIZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAoBtBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAACuB,EAAA,KAAD,iBA5EErB,cC0BfyC,GC1BczC,6LDOrB,OACIJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAC4C,EAAD,MAUA9C,EAAAC,EAAAC,cAAC6C,EAAD,MACA/C,EAAAC,EAAAC,cAAC8C,EAAD,cAfE5C,cEDE6C,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,uECXRC,IAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAASC,SAASC,eAAe,SD0HzC,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMC,KAAK,SAACC,GAChCA,EAAaC","file":"static/js/main.1dbdbcaa.chunk.js","sourcesContent":["// Imports\nimport React, { Component } from 'react';\n\n// CSS\nimport './../styles/css/galaxy.css';\n\nclass Galaxy extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"galaxy\">\n                <div className=\"stars\">\n                    <div className=\"stars1\"></div>\n                    <div className=\"stars2\"></div>\n                    <div className=\"stars3\"></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Galaxy;\n","// Imports\nimport React, { Component } from 'react';\n\n// CSS\nimport './../styles/css/rocketship.css';\n\nclass Rocketship extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"rocketship\">\n                <div className=\"exhaust-fumes\">\n                    <ul>\n                        <li />\n                        <li />\n                        <li />\n                        <li />\n                        <li />\n                        <li />\n                        <li />\n                        <li />\n                        <li />\n                    </ul>\n                </div>\n\n                <div className=\"rocket\">\n                    <div className=\"rocket-body\">\n                        <div className=\"body\"></div>\n                        <div className=\"body-cap\"></div>\n                        <div className=\"fin-sides fin-left\"></div>\n                        <div className=\"fin-sides fin-right\"></div>\n                        <div className=\"fin-middle\"></div>\n                        <div className=\"window\"></div>\n                        <div className=\"window-tint\"></div>\n                    </div>\n                    <div className=\"exhaust-flame\"></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Rocketship;\n","// Imports\nimport React, { Component } from 'react';\nimport ScrollableAnchor, { goToAnchor, configureAnchors, removeHash } from 'react-scrollable-anchor';\nimport { Grid, Cell } from 'react-mdl';\n\n// Components\nimport Rocketship from './rocketship';\n\n// CSS\nimport './../styles/css/home.css';\n\nconst greetings = ['Hello', 'Hallo', 'Jambo', 'Barev dzez', 'Mingalarba',\n    'Chum reap suor', 'Ni hao', 'Namasté', 'Halo', 'Konnichiwa', 'Annyeonghaseyo',\n    'Sabaidee', 'Sain baina uu', 'Kumusta', 'Vanakkam', 'Sàwàtdee', 'Xin chào',\n    'Tungjatjeta', 'Zdravejte', 'Bok', 'Ahoj', 'Terve', 'Bonjour', 'Dia duit',\n    'Guten tag', 'Yasass', 'Szervusz', 'Halló', 'Salve', 'God dag', 'Cześć', 'Olá',\n    'Salut', 'Privét', 'Zdravo', 'Hola', 'Hej', 'Vitayu', 'As-salām ‘alaykum',\n    'Shalóm', 'Salâm', 'Merhaba', 'Aloha', 'Asalaam alaikum', 'Hei', 'Geia', 'Hai'];\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            greeting: 'Hello',\n        };\n    }\n\n    updateGreeting() {\n        this.setState({\n            greeting: greetings[Math.floor(Math.random() * greetings.length)],\n        });\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.updateGreeting(), 1500);\n        configureAnchors({ offset: 0, scrollDuration: 0 });\n        goToAnchor('home', false);\n    }\n\n    componentWillUpdate() {\n        removeHash();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    scrollToProjects() {\n        configureAnchors({ offset: -50, scrollDuration: 400 });\n        goToAnchor('projects', false);\n    }\n\n    render() {\n        return (\n            <div className=\"home\">\n                <Grid>\n                    <Cell col={12}>\n                        <div className=\"home-grid\">\n                            <ScrollableAnchor id={'home'}>\n                                <div className=\"banner-text\">\n                                    <h1><span>I&apos;m Ian Yang!</span></h1>\n                                    <p>\n                                        Computer Science & Statistics Student\n                                    <br />\n                                    University of Toronto\n                                </p>\n                                    {/* <hr /> */}\n                                </div>\n                            </ScrollableAnchor>\n\n                            <div className=\"social-links\">\n                                {/* Resume */}\n                                <a href='../resources/Resume (Ian Yang).pdf' rel=\"noopener noreferrer\" target=\"_blank\">\n                                    <img src='../images/resume.svg' alt=\"Resume\" className=\"social-icon\" />\n                                </a>\n\n                                {/* Projects */}\n                                {/* eslint-disable-next-line */}\n                                <a onClick={() => this.scrollToProjects()}>\n                                    <img src='../images/projects.svg' alt=\"Projects\" className=\"social-icon\" />\n                                </a>\n\n                                {/* GitHub */}\n                                <a href='https://github.com/ianyyang/' rel=\"noopener noreferrer\" target=\"_blank\">\n                                    <img src='../images/github.svg' alt=\"GitHub\" className=\"social-icon\" />\n                                </a>\n\n                                {/* LinkedIn */}\n                                <a href='https://www.linkedin.com/in/ianyyang/' rel=\"noopener noreferrer\" target=\"_blank\">\n                                    <img src='../images/linkedin.svg' alt=\"LinkedIn\" className=\"social-icon\" />\n                                </a>\n\n                                {/* Email */}\n                                <a href='mailto:iany.yang.utoronto.ca' rel=\"noopener noreferrer\" target=\"_blank\">\n                                    <img src='../images/email.svg' alt=\"Email\" className=\"social-icon\" />\n                                </a>\n                            </div>\n                        </div>\n\n                        <Rocketship />\n                    </Cell>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","// Imports\nimport React, { Component } from 'react';\nimport ScrollableAnchor from 'react-scrollable-anchor';\nimport { Grid, Cell, Card, CardTitle, CardText, CardActions } from 'react-mdl';\n\n// CSS\nimport './../styles/css/projects.css';\n\nclass ProjectsDesktop extends Component {\n    render() {\n        return (\n            <div className=\"projects\">\n                <Grid className=\"projects-grid\">\n                    <Cell col={12}>\n                        <ScrollableAnchor id={'projects'}>\n                            <div className=\"projects-header\">\n                                <h1>Projects</h1>\n                            </div>\n                        </ScrollableAnchor>\n\n                        <div className=\"projects-desktop\">\n                            {/* Cell columns below have to equal to the one above (12) */}\n                            <Grid>\n                                {/* Personal Website */}\n                                <Cell col={6}>\n                                    <Card shadow={4} style={{ width: '325px', margin: 'auto' }}>\n                                        <CardActions style={{ background: '#B0D7FF' }}>\n                                            <a href='https://github.com/ianyyang/ianyyang.github.io/' rel=\"noopener noreferrer\" target=\"_blank\">\n                                                <h1 className=\"projects-title\">Personal Website</h1>\n                                            </a>\n                                        </CardActions>\n                                        <a href='https://github.com/ianyyang/ianyyang.github.io/' rel=\"noopener noreferrer\" target=\"_blank\">\n                                            <CardTitle style={{ color: '#92C1F0', height: '300px', background: 'url(../images/personal-website.gif) center / cover' }} />\n                                        </a>\n                                        <CardText style={{ background: '#B0D7FF' }}>\n                                            <p className=\"projects-desc\">My personal website (this one!) serves as an environment for me to showcase the projects I&apos;ve made to the world and to document my progress throughout them!</p>\n                                        </CardText>\n                                        <CardActions style={{ background: '#C9E4FF' }}>\n                                            <h1 className=\"projects-tech\">React.js HTML CSS</h1>\n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <br className='projects-divider'></br>\n\n                                {/* Foodiary UI/UX Project */}\n                                <Cell col={6}>\n                                    <Card shadow={4} style={{ width: '325px', margin: 'auto' }}>\n                                        <CardActions style={{ background: '#B0D7FF' }}>\n                                            <a href='https://ianyyang.github.io/Foodiary/' rel=\"noopener noreferrer\" target=\"_blank\">\n                                                <h1 className=\"projects-title\">Foodiary UX/UI Project</h1>\n                                            </a>\n                                        </CardActions>\n                                        <a href='https://ianyyang.github.io/Foodiary/' rel=\"noopener noreferrer\" target=\"_blank\">\n                                            <CardTitle style={{ color: '#92C1F0', height: '300px', background: 'url(../images/Foodiary.png) center / cover' }} />\n                                        </a>\n                                        <CardText style={{ background: '#B0D7FF' }}>\n                                            <p className=\"projects-desc\">Foodiary is an app focused on promoting food safety within food handling, storing, and preparation via food expiry notifications, applicable recipe suggestions, and relevant news articles.</p>\n                                        </CardText>\n                                        <CardActions style={{ background: '#C9E4FF' }}>\n                                            <h1 className=\"projects-tech\">Figma Wireframing & UI Design Tool</h1>\n                                        </CardActions>\n                                    </Card>\n                                </Cell>\n                                <br className='projects-divider'></br>\n\n                                {/* Item 3 */}\n                                {/* <Cell col={4}>\n                  <Card shadow={4} style={{width: '325px', margin: 'auto'}}>\n                    <CardActions style={{background: '#C9E4FF'}}>\n                      <h1 className=\"projects-title\">Foodiary UX/UI Project</h1>\n                    </CardActions>\n                    <a href='https://ianyyang.github.io/Foodiary/' rel=\"noopener noreferrer\" target=\"_blank\">\n                      <CardTitle style={{color: '#C9E4FF', height: '300px', background: 'url(../images/Foodiary.png) center / cover'}}/>\n                    </a>\n                    <CardText style={{background: '#C9E4FF'}}>\n                      <p className=\"projects-desc\">Foodiary is an app centered towards promoting food safety within the handling, storing, and preparation processes. By entering their food data, users are automatically notified of soon-to-be expired foods and are given appropriate recipe suggestions accordingly. News regarding food safety can also be read to stay up-to-date with the latest food related issues.</p>\n                    </CardText>\n                  </Card>\n                </Cell>\n                <br className='projects-divider'></br> */}\n                            </Grid>\n                        </div>\n\n                        <div className=\"projects-desktop\">\n                            <Grid>\n                                {/* Item 4 */}\n                                {/* <Cell col={4}>\n                  <Card shadow={4} style={{width: '325px', margin: 'auto'}}>\n                    <CardActions style={{background: '#C9E4FF'}}>\n                      <h1 className=\"projects-title\">Foodiary UX/UI Project</h1>\n                    </CardActions>\n                    <a href='https://ianyyang.github.io/Foodiary/' rel=\"noopener noreferrer\" target=\"_blank\">\n                      <CardTitle style={{color: '#C9E4FF', height: '300px', background: 'url(../images/Foodiary.png) center / cover'}}/>\n                    </a>\n                    <CardText style={{background: '#C9E4FF'}}>\n                      <p className=\"projects-desc\">Foodiary is an app centered towards promoting food safety within the handling, storing, and preparation processes. By entering their food data, users are automatically notified of soon-to-be expired foods and are given appropriate recipe suggestions accordingly. News regarding food safety can also be read to stay up-to-date with the latest food related issues.</p>\n                    </CardText>\n                  </Card>\n                </Cell>\n                <br className='projects-divider'></br> */}\n\n                                {/* Item 5 */}\n                                {/* <Cell col={4}>\n                  <Card shadow={4} style={{width: '325px', margin: 'auto'}}>\n                    <CardActions style={{background: '#C9E4FF'}}>\n                      <h1 className=\"projects-title\">Foodiary UX/UI Project</h1>\n                    </CardActions>\n                    <a href='https://ianyyang.github.io/Foodiary/' rel=\"noopener noreferrer\" target=\"_blank\">\n                      <CardTitle style={{color: '#C9E4FF', height: '300px', background: 'url(../images/Foodiary.png) center / cover'}}/>\n                    </a>\n                    <CardText style={{background: '#C9E4FF'}}>\n                      <p className=\"projects-desc\">Foodiary is an app centered towards promoting food safety within the handling, storing, and preparation processes. By entering their food data, users are automatically notified of soon-to-be expired foods and are given appropriate recipe suggestions accordingly. News regarding food safety can also be read to stay up-to-date with the latest food related issues.</p>\n                    </CardText>\n                  </Card>\n                </Cell>\n                <br className='projects-divider'></br> */}\n\n                                {/* Item 6 */}\n                                {/* <Cell col={4}>\n                  <Card shadow={4} style={{width: '325px', margin: 'auto'}}>\n                    <CardActions style={{background: '#C9E4FF'}}>\n                      <h1 className=\"projects-title\">Foodiary UX/UI Project</h1>\n                    </CardActions>\n                    <a href='https://ianyyang.github.io/Foodiary/' rel=\"noopener noreferrer\" target=\"_blank\">\n                      <CardTitle style={{color: '#C9E4FF', height: '300px', background: 'url(../images/Foodiary.png) center / cover'}}/>\n                    </a>\n                    <CardText style={{background: '#C9E4FF'}}>\n                      <p className=\"projects-desc\">Foodiary is an app centered towards promoting food safety within the handling, storing, and preparation processes. By entering their food data, users are automatically notified of soon-to-be expired foods and are given appropriate recipe suggestions accordingly. News regarding food safety can also be read to stay up-to-date with the latest food related issues.</p>\n                    </CardText>\n                  </Card>\n                </Cell>\n                <br className='projects-divider'></br> */}\n                            </Grid>\n                        </div>\n                    </Cell>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default ProjectsDesktop;\n","// Imports\nimport React, { Component } from 'react';\nimport MediaQuery from 'react-responsive';\n\n// CSS\nimport './styles/css/App.css';\n\n// Components\nimport Galaxy from './components/galaxy';\nimport Home from './components/home';\nimport ProjectsDesktop from './components/projects-desktop';\nimport ProjectsMobile from './components/projects-mobile';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Galaxy />\n                \n                {/* <MediaQuery className=\"media_query\" query=\"(min-device-width: 1080px)\">\n                    <ProjectsDesktop />\n                </MediaQuery> */}\n\n                {/* <MediaQuery className=\"media_query\" query=\"(max-device-width: 1080px)\">\n                    <ProjectsMobile />\n                </MediaQuery> */}\n\n                <ProjectsDesktop />\n                <Home />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// Imports\nimport React, { Component } from 'react';\nimport ScrollableAnchor from 'react-scrollable-anchor';\nimport { Grid, Cell, Card, CardTitle, CardText, CardActions } from 'react-mdl';\n\n// CSS\nimport './../styles/css/projects.css';\n\nclass ProjectsMobile extends Component {\n    render() {\n        return (\n            <div>\n                <Grid className=\"projects-grid\">\n                    <Cell col={12}>\n                        <ScrollableAnchor id={'projects'}>\n                            <div className=\"projects-header\">\n                                <h1>Projects</h1>\n                            </div>\n                        </ScrollableAnchor>\n\n                        <div className=\"projects-mobile\">\n                            {/* Personal Website */}\n                            <Card shadow={4} style={{ width: '325px', margin: 'auto' }}>\n                                <CardActions style={{ background: '#B0D7FF' }}>\n                                    <a href='https://github.com/ianyyang/ianyyang.github.io/' rel=\"noopener noreferrer\" target=\"_blank\">\n                                        <h1 className=\"projects-title\">Personal Website</h1>\n                                    </a>\n                                </CardActions>\n                                <a href='https://github.com/ianyyang/ianyyang.github.io/' rel=\"noopener noreferrer\" target=\"_blank\">\n                                    <CardTitle style={{ color: '#92C1F0', height: '300px', background: 'url(../images/personal-website.gif) center / cover' }} />\n                                </a>\n                                <CardText style={{ background: '#B0D7FF' }}>\n                                    <p className=\"projects-desc\">My personal website (this one!) serves as an environment for me to showcase the projects I&apos;ve made to the world and to document my progress throughout them!</p>\n                                </CardText>\n                                <CardActions style={{ background: '#C9E4FF' }}>\n                                    <h1 className=\"projects-tech\">React.js HTML CSS</h1>\n                                </CardActions>\n                            </Card>\n                            <br className='projects-divider'></br>\n\n                            {/* Foodiary UI/UX Project */}\n                            <Card shadow={4} style={{ width: '325px', margin: 'auto' }}>\n                                <CardActions style={{ background: '#B0D7FF' }}>\n                                    <a href='https://ianyyang.github.io/Foodiary/' rel=\"noopener noreferrer\" target=\"_blank\">\n                                        <h1 className=\"projects-title\">Foodiary UX/UI Project</h1>\n                                    </a>\n                                </CardActions>\n                                <a href='https://ianyyang.github.io/Foodiary/' rel=\"noopener noreferrer\" target=\"_blank\">\n                                    <CardTitle style={{ color: '#92C1F0', height: '300px', background: 'url(../images/Foodiary.png) center / cover' }} />\n                                </a>\n                                <CardText style={{ background: '#B0D7FF' }}>\n                                    <p className=\"projects-desc\">Foodiary is an app focused on promoting food safety within food handling, storing, and preparation via food expiry notifications, applicable recipe suggestions, and relevant news articles.</p>\n                                </CardText>\n                                <CardActions style={{ background: '#C9E4FF' }}>\n                                    <h1 className=\"projects-tech\">Figma Wireframing & UI Design Tool</h1>\n                                </CardActions>\n                            </Card>\n                            <br className='projects-divider'></br>\n\n                            {/* Item 3 */}\n                            {/* <Card shadow={4} style={{width: '325px', margin: 'auto'}}>\n                <CardActions style={{background: '#C9E4FF'}}>\n                  <h1 className=\"projects-title\">Foodiary UX/UI Project</h1>\n                </CardActions>\n                <a href='https://ianyyang.github.io/Foodiary/' rel=\"noopener noreferrer\" target=\"_blank\">\n                  <CardTitle style={{color: '#C9E4FF', height: '300px', background: 'url(../images/Foodiary.png) center / cover'}}></CardTitle>\n                </a>\n                <CardText style={{background: '#C9E4FF'}}>\n                  <p className=\"projects-desc\">Foodiary is an app centered towards promoting food safety within the handling, storing, and preparation processes. By entering their food data, users are automatically notified of soon-to-be expired foods and are given appropriate recipe suggestions accordingly. News regarding food safety can also be read to stay up-to-date with the latest food related issues.</p>\n                </CardText>\n              </Card>\n              <br className='projects-divider'></br> */}\n\n                            {/* Item 4 */}\n                            {/* <Card shadow={4} style={{width: '325px', margin: 'auto'}}>\n                <CardActions style={{background: '#C9E4FF'}}>\n                  <h1 className=\"projects-title\">Foodiary UX/UI Project</h1>\n                </CardActions>\n                <a href='https://ianyyang.github.io/Foodiary/' rel=\"noopener noreferrer\" target=\"_blank\">\n                  <CardTitle style={{color: '#C9E4FF', height: '300px', background: 'url(../images/Foodiary.png) center / cover'}}></CardTitle>\n                </a>\n                <CardText style={{background: '#C9E4FF'}}>\n                  <p className=\"projects-desc\">Foodiary is an app centered towards promoting food safety within the handling, storing, and preparation processes. By entering their food data, users are automatically notified of soon-to-be expired foods and are given appropriate recipe suggestions accordingly. News regarding food safety can also be read to stay up-to-date with the latest food related issues.</p>\n                </CardText>\n              </Card>\n              <br className='projects-divider'></br> */}\n\n                            {/* Item 5 */}\n                            {/* <Card shadow={4} style={{width: '325px', margin: 'auto'}}>\n                <CardActions style={{background: '#C9E4FF'}}>\n                  <h1 className=\"projects-title\">Foodiary UX/UI Project</h1>\n                </CardActions>\n                <a href='https://ianyyang.github.io/Foodiary/' rel=\"noopener noreferrer\" target=\"_blank\">\n                  <CardTitle style={{color: '#C9E4FF', height: '300px', background: 'url(../images/Foodiary.png) center / cover'}}></CardTitle>\n                </a>\n                <CardText style={{background: '#C9E4FF'}}>\n                  <p className=\"projects-desc\">Foodiary is an app centered towards promoting food safety within the handling, storing, and preparation processes. By entering their food data, users are automatically notified of soon-to-be expired foods and are given appropriate recipe suggestions accordingly. News regarding food safety can also be read to stay up-to-date with the latest food related issues.</p>\n                </CardText>\n              </Card>\n              <br className='projects-divider'></br> */}\n\n                            {/* Item 6 */}\n                            {/* <Card shadow={4} style={{width: '325px', margin: 'auto'}}>\n                <CardActions style={{background: '#C9E4FF'}}>\n                  <h1 className=\"projects-title\">Foodiary UX/UI Project</h1>\n                </CardActions>\n                <a href='https://ianyyang.github.io/Foodiary/' rel=\"noopener noreferrer\" target=\"_blank\">\n                  <CardTitle style={{color: '#C9E4FF', height: '300px', background: 'url(../images/Foodiary.png) center / cover'}}></CardTitle>\n                </a>\n                <CardText style={{background: '#C9E4FF'}}>\n                  <p className=\"projects-desc\">Foodiary is an app centered towards promoting food safety within the handling, storing, and preparation processes. By entering their food data, users are automatically notified of soon-to-be expired foods and are given appropriate recipe suggestions accordingly. News regarding food safety can also be read to stay up-to-date with the latest food related issues.</p>\n                </CardText>\n              </Card>\n              <br className='projects-divider'></br> */}\n                        </div>\n                    </Cell>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default ProjectsMobile;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.',\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}